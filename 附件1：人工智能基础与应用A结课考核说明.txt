1
一、考核方式
本课程采用“项目实践+学术论文”的结课考核形式，旨在考察学生对人工
智能基础理论的理解能力、技术应用能力以及综合分析与创新实践能力，促进学
生掌握人工智能核心思想，实现“理解技术原理—完成实践应用—反思社会影响”
的闭环学习。
 项目实践（50%）：学生需独立完成一个与人工智能相关的实践项目，提交项
目成果。
 学术论文（50%）：围绕项目内容撰写一篇学术论文，描述项目的实现过程，
分析测试结果，体现理论结合实践的深度思考。
二、考核内容
1、项目实践
需结合课程内容，鼓励跨学科融合（如 AI+制造、AI+环境、AI+教育），重点
关注技术落地场景与伦理思考。避免纯理论综述，需体现动手实践能力！选题方
向包括但不限于：
 算法应用类：使用经典算法（如回归、分类、聚类）解决实际问题（如数据
分析、预测模型）。
 AIGC 工具生成类：利用 AI 生成工具（如 DeepSeek、豆包、Stable Diffusion）
创作文本、图像、视频或代码作品。
 综合创新类：结合硬件（如传感器、机器人）或行业场景（如智慧城市、医
疗、金融）设计智能化解决方案。
2、学术论文
论文内容应至少包括以下五个方面。
 背景与意义：结合课程知识点，说明项目的技术背景、社会价值或行业应用
场景。
 技术原理：阐述项目涉及的核心算法或工具（如 CNN 图像识别原理）。
2
 实现过程：描述项目开发步骤、数据处理方法、关键技术难点及解决方案。
 结果分析：展示项目成果（数据可视化、生成作品、系统演示），并基于技
术指标（如准确率、用户反馈）进行评价。
 总结与反思：探讨项目的局限性、改进方向，以及人工智能伦理/安全问题
的思考。
三、评价方法
1. 项目评分标准（50%）
评价维度 评分要点 分值比例
创新性 选题新颖性、技术或应用场景的创新程度 20%
技术难度 算法复杂度、工具使用的深度（如调参、模型优化） 40%
完成度 项目功能完整性、成果的可展示性 40%
2. 论文评分标准（50%）
评价维度 评分要点 分值比例
结构完整性 逻辑清晰，包含背景、原理、方法、结果、讨论等部分 20%
理论深度 对课程知识点的准确引用与扩展分析 30%
实践结合度 项目与理论的关联性，数据分析的严谨性 30%
学术规范 文献引用规范（至少 5 篇参考文献）、格式正确性 20%
四、提交要求与时间安排
1. 项目提交内容
代码/工具生成文件，如.ipynb、.py、.mp4、.png、.jpeg 等。
2. 论文提交要求
字数要求 5000—10000 字。论文格式见附件。
3
3. 截止时间
结课后两周内以附件方式提交至课程平台。
五、项目选题示例
1、算法类项目
可以利用实验平台上的实验代码，通过调整参数、改变数据等方法，得到测
试结果；也可以选择其他的开源算法平台；或者自己开发测试程序等方法实现项
目。
（1）人工神经网络分类器实践
• 工具：TensorFlow Playground（在线可视化工具，无需代码）
• 任务：
o 使用工具搭建 3 层神经网络（输入层+隐藏层+输出层）
o 选择"螺旋型数据分类"或"异或问题"数据集
o 调整隐藏层神经元数量、激活函数（如 ReLU/Sigmoid），观察分类边界变化
• 成果：
o 截图展示不同参数下的分类效果对比
o 总结神经网络参数对分类性能的影响规律
（2）手写数字图像识别
• 工具：Keras + MNIST 数据集
• 任务：
o 使用预训练 MNIST 数据集
o 调用 Keras 库的 Sequential 模型快速搭建全连接神经网络
o 输出测试集准确率，可视化 5 个错误分类样本
• 代码示例：
from keras.datasets import mnist
from keras.models import Sequential
from keras.layers import Dense, Flatten
(X_train, y_train), (X_test, y_test) = mnist.load_data()
model = Sequential([
4
 Flatten(input_shape=(28,28)), # 输入层
 Dense(128, activation='relu'), # 隐藏层
 Dense(10, activation='softmax')# 输出层
])
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', 
metrics=['accuracy'])
model.fit(X_train, y_train, epochs=5)
test_loss, test_acc = model.evaluate(X_test, y_test)
print(f"测试集准确率：{test_acc:.4f}")
（3）语音指令分类
• 工具：Google Teachable Machine（零代码在线平台）
• 任务：
o 录制 10 段"开灯"/"关灯"语音指令（各 5 段）
o 上传至平台训练分类模型，导出模型并测试新语音
• 成果：
o 导出模型测试结果（混淆矩阵）
o 分析背景噪声对分类准确率的影响
2、AIGC 类项目
（1） AI 诗歌创作与文学分析（自然语言处理）
• 任务：
o 输入“春天”“河流”等关键词，生成 5 首中文现代诗
o 对比 AI 诗歌与传统文学逻辑差异
• 成果要求：
o 提交生成诗歌及人工修改版本（如调整押韵）
o 分析 AI 创作对文学行业的潜在影响
（2）智能垃圾分类助手（计算机视觉）
• 工具：百度 EasyDL 零代码训练平台（https://ai.baidu.com/easydl/）
• 任务：
o 使用预置“可回收垃圾/有害垃圾”图片数据集
5
o 训练图像分类模型，上传自拍垃圾图片测试
• 成果要求：
o 导出模型测试准确率（需>80%）
o 讨论误分类的环境风险（如电池被误判为可回收）
（3）智能课堂笔记整理（语音识别）
• 工具：讯飞听见（https://www.iflyrec.com/） + Word 文档
• 任务：
o 录制 3 分钟课堂录音，转写为文字笔记
o 用 Word“智能纠错”功能修正识别错误
• 成果要求：
o 提交原始文本与修正后版本（标注修改处）
o 结合数据驱动，分析方言口音对识别率的影响
（4） AI 辩论助手（逻辑推理）
• 工具：DeepSeek + 思维导图软件（XMind）
• 任务：
o 输入辩题“人工智能是否威胁人类就业”，获取正反方论点
o 用思维导图整理 AI 生成逻辑链条，标注漏洞（如数据偏见）
• 成果要求：
o 提交辩论逻辑图及人工修正版本
o 评价 AI 辅助决策的可靠性
